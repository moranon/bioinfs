seq = 'AGGGGGGAGTCCAGAGTCCAGTTGCACCTTGCACCAGGGGGGCATCGAAAGAATGATCCATCGAACATCGAAAGGGGGGAGTCCAGAGAATGATCAGAATGATCAGAATGATCAGGGGGGCATCGAATTGCACCAGGGGGGAGTCCAGAGGGGGGAGAATGATCCATCGAATTGCACCCATCGAAAGAATGATCCATCGAAAGAATGATCCATCGAACATCGAACATCGAAAGTCCAGAGGGGGGAGGGGGGCATCGAAAGAATGATCTTGCACCAGAATGATCCATCGAAAGGGGGGAGGGGGGAGGGGGGTTGCACCTTGCACCCATCGAAAGTCCAGAGGGGGGAGTCCAGAGAATGATCAGAATGATCTTGCACCCATCGAAAGAATGATCAGAATGATCAGGGGGGCATCGAACATCGAAAGAATGATCCATCGAAAGGGGGGAGAATGATCAGGGGGGAGAATGATCCATCGAAAGTCCAGCATCGAACATCGAACATCGAATTGCACCAGGGGGGAGTCCAGAGGGGGGTTGCACCAGTCCAGAGGGGGGAGAATGATCAGGGGGGAGGGGGGTTGCACCAGTCCAGAGAATGATCTTGCACCTTGCACCCATCGAATTGCACCCATCGAACATCGAAAGTCCAGAGGGGGGTTGCACCAGAATGATCAGTCCAGCATCGAAAGTCCAGAGTCCAGAGGGGGGAGGGGGGCATCGAAAGTCCAGTTGCACCAGAATGATCAGGGGGGTTGCACCCATCGAAAGTCCAGAGTCCAGAGGGGGGTTGCACCAGGGGGGCATCGAATTGCACCTTGCACCCATCGAAAGTCCAGAGTCCAG'
kmers = {}
k = 12
for i in range(len(seq) - k + 1):
   kmer = seq[i:i+k]
   if kmers.has_key(kmer):
      kmers[kmer] += 1
   else:
      kmers[kmer] = 1

##for kmer, count in kmers.items():
##  print kmer + "\t" + str(count)
import operator
sortedKmer = kmers.items()
sortedKmer.sort(key = operator.itemgetter(1), reverse = True)
for item in sortedKmer:
   print item[0] + "\t" + str(item[1])
